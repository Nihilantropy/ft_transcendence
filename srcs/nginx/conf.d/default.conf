# /**
#  * @brief Simplified server configuration for ft_transcendence
#  * 
#  * @description Basic HTTP/HTTPS setup with frontend proxy
#  */

# Main HTTPS server
server {
    listen 443 ssl;
    server_name _;
    
    # Log all HTTPS requests for debugging
    access_log /var/log/nginx/https_access.log main;
    error_log /var/log/nginx/https_error.log warn;
    
    # SSL configuration - simplified for development
    ssl_certificate /etc/nginx/ssl/selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/selfsigned.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html/error_pages;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Main application proxy to frontend
    location / {
        # Log proxy attempts for debugging
        access_log /var/log/nginx/proxy_access.log main;
        
        # Direct proxy to frontend service (no upstream abstraction)
        proxy_pass http://frontend:5173;
        
        # Basic proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support (for Vite HMR)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Reasonable timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Handle proxy errors gracefully
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.html;
    }
    
    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name _;
    
    # Log all HTTP requests for debugging
    access_log /var/log/nginx/http_access.log main;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
}

